{"ast":null,"code":"import \"antd/es/input/style\";\nimport _Input from \"antd/es/input\";\nimport \"antd/es/tree/style\";\nimport _Tree from \"antd/es/tree\";\nimport \"antd/es/form/style\";\nimport _Form from \"antd/es/form\";\nvar _jsxFileName = \"/Users/ao/WebstormProjects/react-management/src/view/role/auth.jsx\";\nimport React, { Component } from 'react';\nimport PropTypes from 'prop-types';\nimport menuConfig from '../../config/menuConfig';\nconst Item = _Form.Item;\nconst TreeNode = _Tree.TreeNode;\nexport default class Auth extends Component {\n  constructor(...args) {\n    super(...args);\n\n    this.getTreeNodes = () => {\n      return menuConfig.reduce((pre, item) => {\n        pre.push(React.createElement(TreeNode, {\n          title: item.title,\n          key: item.key,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 18\n          },\n          __self: this\n        }));\n      }, []);\n    };\n  }\n\n  componentWillMount() {\n    this.tree = this.getTreeNodes();\n  }\n\n  render() {\n    return React.createElement(_Form, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 29\n      },\n      __self: this\n    }, React.createElement(Item, {\n      label: \"\\u89D2\\u8272\",\n      labelCol: {\n        span: 2\n      },\n      wrapperCol: {\n        span: 22\n      },\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 30\n      },\n      __self: this\n    }, React.createElement(_Input, {\n      disabled: true,\n      value: this.props.name,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 31\n      },\n      __self: this\n    })), React.createElement(_Tree, {\n      checkable: true,\n      defaultExpandAll: true,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 33\n      },\n      __self: this\n    }, this.tree));\n  }\n\n}\nAuth.propTypes = {\n  name: PropTypes.string\n};","map":{"version":3,"sources":["/Users/ao/WebstormProjects/react-management/src/view/role/auth.jsx"],"names":["React","Component","PropTypes","menuConfig","Item","TreeNode","Auth","getTreeNodes","reduce","pre","item","push","title","key","componentWillMount","tree","render","span","props","name","propTypes","string"],"mappings":";;;;;;;AAAA,OAAOA,KAAP,IAAeC,SAAf,QAA+B,OAA/B;AACA,OAAOC,SAAP,MAAsB,YAAtB;AAMA,OAAOC,UAAP,MAAuB,yBAAvB;AACA,MAAMC,IAAI,GAAG,MAAKA,IAAlB;AACA,MAAMC,QAAQ,GAAC,MAAKA,QAApB;AACA,eAAe,MAAMC,IAAN,SAAmBL,SAAnB,CAA6B;AAAA;AAAA;;AAAA,SAI1CM,YAJ0C,GAI7B,MAAI;AACf,aAAOJ,UAAU,CAACK,MAAX,CAAkB,CAACC,GAAD,EAAKC,IAAL,KAAY;AACnCD,QAAAA,GAAG,CAACE,IAAJ,CACI,oBAAC,QAAD;AAAU,UAAA,KAAK,EAAED,IAAI,CAACE,KAAtB;AAA6B,UAAA,GAAG,EAAEF,IAAI,CAACG,GAAvC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,UADJ;AAID,OALM,EAKL,EALK,CAAP;AAMD,KAXyC;AAAA;;AAY5CC,EAAAA,kBAAkB,GAAG;AACnB,SAAKC,IAAL,GAAU,KAAKR,YAAL,EAAV;AACD;;AAECS,EAAAA,MAAM,GAAG;AACP,WACI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OACE,oBAAC,IAAD;AAAM,MAAA,KAAK,EAAC,cAAZ;AAAiB,MAAA,QAAQ,EAAE;AAACC,QAAAA,IAAI,EAAC;AAAN,OAA3B;AAAqC,MAAA,UAAU,EAAE;AAACA,QAAAA,IAAI,EAAC;AAAN,OAAjD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OACE;AAAO,MAAA,QAAQ,MAAf;AAAgB,MAAA,KAAK,EAAE,KAAKC,KAAL,CAAWC,IAAlC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MADF,CADF,EAIE;AACI,MAAA,SAAS,MADb;AAEI,MAAA,gBAAgB,EAAE,IAFtB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OAIG,KAAKJ,IAJR,CAJF,CADJ;AAaD;;AA9ByC;AAAvBT,I,CACZc,S,GAAY;AACjBD,EAAAA,IAAI,EAAEjB,SAAS,CAACmB;AADC,C","sourcesContent":["import React, {Component} from 'react';\nimport PropTypes from 'prop-types';\nimport {\n  Form,\n  Input,\n  Tree\n} from 'antd';\nimport menuConfig from '../../config/menuConfig';\nconst Item = Form.Item;\nconst TreeNode=Tree.TreeNode;\nexport default class Auth extends Component {\n  static propTypes = {\n    name: PropTypes.string,\n  };\n  getTreeNodes=()=>{\n    return menuConfig.reduce((pre,item)=>{\n      pre.push(\n          <TreeNode title={item.title} key={item.key}>\n          </TreeNode>\n      )\n    },[])\n  };\ncomponentWillMount() {\n  this.tree=this.getTreeNodes();\n}\n\n  render() {\n    return (\n        <Form>\n          <Item label='角色' labelCol={{span:2}} wrapperCol={{span:22}}>\n            <Input disabled value={this.props.name}/>\n          </Item>\n          <Tree\n              checkable\n              defaultExpandAll={true}\n          >\n            {this.tree}\n          </Tree>\n        </Form>\n    );\n  }\n}\n"]},"metadata":{},"sourceType":"module"}