{"ast":null,"code":"import \"antd/es/card/style\";\nimport _Card from \"antd/es/card\";\nimport \"antd/es/button/style\";\nimport _Button from \"antd/es/button\";\nimport \"antd/es/cascader/style\";\nimport _Cascader from \"antd/es/cascader\";\nimport \"antd/es/icon/style\";\nimport _Icon from \"antd/es/icon\";\nimport \"antd/es/input/style\";\nimport _Input from \"antd/es/input\";\nimport \"antd/es/form/style\";\nimport _Form from \"antd/es/form\";\nvar _jsxFileName = \"/Users/ao/WebstormProjects/react-management/src/view/product/add.jsx\";\nimport React, { Component } from 'react';\nimport LinkButton from '../../components/link-button/button';\nimport RichTextEditor from './richTextEditor';\nimport PicturesWall from './picturesWall';\nimport { reqCategorys } from '../../api/index';\nconst Item = _Form.Item;\nconst TextArea = _Input.TextArea;\n\nclass ProductAdd extends Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      options: []\n    };\n\n    this.initOptions = async categorys => {\n      const options = categorys.map(item => ({\n        value: item._id,\n        label: item.name,\n        isLeaf: false\n      }));\n      const update = this.update,\n            product = this.product;\n      const pCategoryId = product.pCategoryId;\n\n      if (update && pCategoryId !== '0') {\n        const subCategorys = await this.getCategorys(pCategoryId);\n        const childOptions = subCategorys.map(item => ({\n          value: item._id,\n          label: item.name,\n          isLeaf: true\n        }));\n        const targetOption = options.find(option => option.value === pCategoryId);\n        targetOption.children = childOptions;\n      }\n\n      this.setState({\n        options: options\n      });\n    };\n\n    this.getCategorys = async parentId => {\n      const result = await reqCategorys(parentId);\n\n      if (result.status === 0) {\n        const categorys = result.data;\n\n        if (parentId === '0') {\n          this.initOptions(categorys);\n        } else {\n          return categorys;\n        }\n      }\n    };\n\n    this.loadData = async selectedOptions => {\n      const targetOption = selectedOptions[0];\n      targetOption.loading = true;\n      const subCategorys = await this.getCategorys(targetOption.value);\n      targetOption.loading = false;\n\n      if (subCategorys && subCategorys.length > 0) {\n        const childOptions = subCategorys.map(item => ({\n          value: item._id,\n          label: item.name,\n          isLeaf: true\n        }));\n        targetOption.children = childOptions;\n      } else {\n        targetOption.isLeaf = true;\n      }\n\n      this.setState({\n        options: [...this.state.options]\n      });\n    };\n\n    this.submit = () => {\n      this.props.form.validateFields((err, data) => {\n        if (!err) {\n          alert('提交表单');\n          let img = this.getImg.current.getImg();\n          let html = this.getHtml.current.getHtmlData();\n          console.log(data);\n          console.log(img);\n        }\n      });\n    };\n\n    this.getImg = React.createRef();\n    this.getHtml = React.createRef();\n  }\n\n  validatePrice(rule, value, callback) {\n    if (value * 1 > 0) {\n      callback();\n    } else if (value * 1 <= 0) {\n      callback('单价必须大于零');\n    }\n  }\n\n  componentWillMount() {\n    const _ref = this.props.location.state || {\n      product: ''\n    },\n          product = _ref.product;\n\n    this.update = !!product;\n    this.product = product || {};\n  }\n\n  componentDidMount() {\n    this.getCategorys('0');\n  }\n\n  render() {\n    const getFieldDecorator = this.props.form.getFieldDecorator;\n    const product = this.product;\n    console.log(this.product);\n    const _this$product = this.product,\n          categoryId = _this$product.categoryId,\n          pCategoryId = _this$product.pCategoryId;\n    const categoryArry = [];\n\n    if (pCategoryId == '0') {\n      categoryArry.push(categoryId);\n    } else {\n      categoryArry.push(pCategoryId);\n      categoryArry.push(categoryId);\n    }\n\n    const title = React.createElement(\"span\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 113\n      },\n      __self: this\n    }, React.createElement(LinkButton, {\n      onClick: () => this.props.history.goBack(),\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 114\n      },\n      __self: this\n    }, React.createElement(_Icon, {\n      type: \"arrow-left\",\n      style: {\n        fontSize: 20\n      },\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 115\n      },\n      __self: this\n    })), React.createElement(\"span\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 117\n      },\n      __self: this\n    }, this.update ? '修改商品' : '添加商品'));\n    const formItemLayout = {\n      labelCol: {\n        span: 2\n      },\n      wrapperCol: {\n        span: 8\n      }\n    };\n    return React.createElement(_Card, {\n      title: title,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 125\n      },\n      __self: this\n    }, React.createElement(_Form, Object.assign({}, formItemLayout, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 126\n      },\n      __self: this\n    }), React.createElement(Item, {\n      label: \"\\u5546\\u54C1\\u540D\\u79F0\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 127\n      },\n      __self: this\n    }, getFieldDecorator('name', {\n      initialValue: product.name,\n      rules: [{\n        required: true,\n        message: '必须输入商品名称'\n      }]\n    })(React.createElement(_Input, {\n      placeholder: \"\\u8BF7\\u8F93\\u5165\\u5546\\u54C1\\u540D\\u79F0\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 134\n      },\n      __self: this\n    }))), React.createElement(Item, {\n      label: \"\\u5546\\u54C1\\u63CF\\u8FF0\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 137\n      },\n      __self: this\n    }, getFieldDecorator('desc', {\n      initialValue: product.desc,\n      rules: [{\n        required: true,\n        message: '必须输入商品描述'\n      }]\n    })(React.createElement(TextArea, {\n      placeholder: \"\\u8BF7\\u8F93\\u5165\\u5546\\u54C1\\u63CF\\u8FF0\",\n      autosize: {\n        minRows: 2,\n        maxRows: 6\n      },\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 144\n      },\n      __self: this\n    }))), React.createElement(Item, {\n      label: \"\\u5546\\u54C1\\u4EF7\\u683C\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 148\n      },\n      __self: this\n    }, getFieldDecorator('price', {\n      initialValue: product.price,\n      rules: [{\n        required: true,\n        message: '必须输入商品价格'\n      }, {\n        validator: this.validatePrice\n      }]\n    })(React.createElement(_Input, {\n      type: \"number\",\n      placeholder: \"\\u8BF7\\u8F93\\u5165\\u5546\\u54C1\\u4EF7\\u683C\",\n      addonAfter: \"\\u5143\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 157\n      },\n      __self: this\n    }))), React.createElement(Item, {\n      label: \"\\u5546\\u54C1\\u56FE\\u7247\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 160\n      },\n      __self: this\n    }, React.createElement(PicturesWall, {\n      ref: this.getImg,\n      imgs: product.imgs,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 161\n      },\n      __self: this\n    })), React.createElement(Item, {\n      label: \"\\u5546\\u54C1\\u5206\\u7C7B\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 163\n      },\n      __self: this\n    }, getFieldDecorator('categoryIds', {\n      initialValue: categoryArry,\n      rules: [{\n        required: true,\n        message: '必须指定商品分类'\n      }]\n    })(React.createElement(_Cascader, {\n      placeholder: \"\\u8BF7\\u6307\\u5B9A\\u5546\\u54C1\\u5206\\u7C7B\",\n      options: this.state.options,\n      loadData: this.loadData,\n      changeOnSelect: true,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 171\n      },\n      __self: this\n    }))), React.createElement(Item, {\n      labelCol: {\n        span: 2\n      },\n      wrapperCol: {\n        span: 20\n      },\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 181\n      },\n      __self: this\n    }, React.createElement(RichTextEditor, {\n      ref: this.getHtml,\n      html: product.detail,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 182\n      },\n      __self: this\n    })), React.createElement(Item, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 184\n      },\n      __self: this\n    }, React.createElement(_Button, {\n      type: \"primary\",\n      onClick: this.submit,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 185\n      },\n      __self: this\n    }, \"\\u63D0\\u4EA4\"))));\n  }\n\n}\n\nexport default _Form.create()(ProductAdd);","map":{"version":3,"sources":["/Users/ao/WebstormProjects/react-management/src/view/product/add.jsx"],"names":["React","Component","LinkButton","RichTextEditor","PicturesWall","reqCategorys","Item","TextArea","ProductAdd","constructor","props","state","options","initOptions","categorys","map","item","value","_id","label","name","isLeaf","update","product","pCategoryId","subCategorys","getCategorys","childOptions","targetOption","find","option","children","setState","parentId","result","status","data","loadData","selectedOptions","loading","length","submit","form","validateFields","err","alert","img","getImg","current","html","getHtml","getHtmlData","console","log","createRef","validatePrice","rule","callback","componentWillMount","location","componentDidMount","render","getFieldDecorator","categoryId","categoryArry","push","title","history","goBack","fontSize","formItemLayout","labelCol","span","wrapperCol","initialValue","rules","required","message","desc","minRows","maxRows","price","validator","imgs","detail","create"],"mappings":"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","sourcesContent":["import  React,{Component} from 'react';\nimport {Card, Icon, Form, Input, Cascader, Button, message} from 'antd';\n\nimport LinkButton from '../../components/link-button/button';\nimport RichTextEditor from './richTextEditor';\nimport PicturesWall from './picturesWall';\nimport {reqCategorys} from '../../api/index';\nconst Item=Form.Item;\nconst TextArea=Input.TextArea;\nclass ProductAdd extends  Component {\n  state={\n    options:[]\n  };\n  constructor(props) {\n    super(props);\n    this.getImg = React.createRef();\n    this.getHtml= React.createRef();\n  }\n  validatePrice(rule,value,callback){\n    if(value*1>0){\n      callback();\n    }else if(value*1<=0){\n      callback('单价必须大于零')\n    }\n  }\n  initOptions = async (categorys) => {\n    const options = categorys.map(item => ({\n      value: item._id,\n      label: item.name,\n      isLeaf: false,\n    }));\n    const {update, product} = this;\n    const {pCategoryId} = product;\n    if(update && pCategoryId!=='0') {\n      const subCategorys = await this.getCategorys(pCategoryId);\n      const childOptions = subCategorys.map(item => ({\n        value: item._id,\n        label: item.name,\n        isLeaf: true\n      }));\n      const targetOption = options.find(option => option.value===pCategoryId);\n      targetOption.children = childOptions\n    }\n    this.setState({\n      options:options,\n    })\n    };\n\n  getCategorys = async (parentId) => {\n    const result = await reqCategorys(parentId);\n    if (result.status===0) {\n      const categorys = result.data;\n      if (parentId==='0') {\n        this.initOptions(categorys)\n      } else {\n        return categorys;\n      }\n    }\n  };\n  loadData = async selectedOptions => {\n    const targetOption = selectedOptions[0];\n    targetOption.loading = true;\n    const subCategorys = await this.getCategorys(targetOption.value);\n    targetOption.loading = false;\n    if (subCategorys && subCategorys.length>0) {\n      const childOptions = subCategorys.map(item => ({\n        value: item._id,\n        label: item.name,\n        isLeaf: true\n      }));\n      targetOption.children = childOptions\n    } else {\n      targetOption.isLeaf = true\n    }\n    this.setState({\n      options: [...this.state.options],\n    })\n  };\n  submit=()=>{\n    this.props.form.validateFields((err,data)=>{\n      if(!err){\n        alert('提交表单');\n        let img=this.getImg.current.getImg();\n        let html=this.getHtml.current.getHtmlData();\n        console.log(data);\n        console.log(img);\n      }\n    })\n  };\n  componentWillMount() {\n    const {product}=this.props.location.state||{product:''};\n    this.update=!!product;\n    this.product=product||{}\n  }\n\n  componentDidMount() {\n    this.getCategorys('0');\n  }\n\n  render() {\n    const {getFieldDecorator} =this.props.form;\n    const product=this.product;\n    console.log(this.product);\n    const {categoryId,pCategoryId}=this.product;\n    const categoryArry=[];\n    if(pCategoryId=='0'){\n      categoryArry.push(categoryId);\n    }else{\n      categoryArry.push(pCategoryId);\n      categoryArry.push(categoryId);\n    }\n    const title = (\n        <span>\n        <LinkButton onClick={() => this.props.history.goBack()}>\n          <Icon type='arrow-left' style={{fontSize: 20}}/>\n        </LinkButton>\n        <span>{this.update?'修改商品':'添加商品'}</span>\n      </span>\n    );\n    const formItemLayout = {\n      labelCol: { span: 2 },\n      wrapperCol: { span: 8 },\n    };\n    return (\n        <Card title={title}>\n          <Form {...formItemLayout}>\n            <Item label=\"商品名称\">\n              {\n                getFieldDecorator('name', {\n                  initialValue:product.name,\n                  rules: [\n                    {required: true, message: '必须输入商品名称'}\n                  ]\n                })(<Input placeholder='请输入商品名称' />)\n            }\n          </Item>\n            <Item label=\"商品描述\">\n              {\n                getFieldDecorator('desc', {\n                  initialValue: product.desc,\n                  rules: [\n                    {required: true, message: '必须输入商品描述'}\n                  ]\n                })(<TextArea placeholder=\"请输入商品描述\" autosize={{ minRows: 2, maxRows: 6 }} />)\n              }\n\n            </Item>\n            <Item label=\"商品价格\">\n\n              {\n                getFieldDecorator('price', {\n                  initialValue: product.price,\n                  rules: [\n                    {required: true, message: '必须输入商品价格'},\n                    {validator:this.validatePrice}\n                  ]\n                })(<Input type='number' placeholder='请输入商品价格' addonAfter='元'/>)\n              }\n            </Item>\n            <Item label='商品图片'>\n              <PicturesWall ref={this.getImg} imgs={product.imgs}/>\n            </Item>\n            <Item label=\"商品分类\">\n              {\n                getFieldDecorator('categoryIds', {\n                  initialValue: categoryArry,\n                  rules: [\n                    {required: true, message: '必须指定商品分类'},\n                  ]\n                })(\n                    <Cascader\n                        placeholder='请指定商品分类'\n                        options={this.state.options}\n                        loadData={this.loadData}\n                        changeOnSelect\n                    />\n                )\n              }\n\n            </Item>\n            <Item labelCol={{span:2}} wrapperCol={{span:20}}>\n              <RichTextEditor ref={this.getHtml} html={product.detail}/>\n            </Item>\n            <Item>\n              <Button type='primary' onClick={this.submit}>提交</Button>\n            </Item>\n          </Form>\n        </Card>\n\n    );\n  }\n}\nexport default Form.create()(ProductAdd);"]},"metadata":{},"sourceType":"module"}