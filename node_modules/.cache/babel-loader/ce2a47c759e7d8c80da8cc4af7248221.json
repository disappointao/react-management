{"ast":null,"code":"var _jsxFileName = \"/Users/ao/WebstormProjects/react-management/src/view/product/richTextEditor.jsx\";\nimport React, { Component } from 'react';\nimport { EditorState, convertToRaw, ContentState } from 'draft-js';\nimport { Editor } from 'react-draft-wysiwyg';\nimport draftToHtml from 'draftjs-to-html';\nimport htmlToDraft from 'html-to-draftjs';\nimport 'react-draft-wysiwyg/dist/react-draft-wysiwyg.css';\nexport default class RichTextEditor extends Component {\n  constructor(props) {\n    super(props);\n\n    this.onEditorStateChange = editorState => {\n      this.setState({\n        editorState\n      });\n    };\n\n    const html = '<p>Hey this <strong>editor</strong> rocks ðŸ˜€</p>';\n    const contentBlock = htmlToDraft(html);\n\n    if (contentBlock) {\n      const contentState = ContentState.createFromBlockArray(contentBlock.contentBlocks);\n      const editorState = EditorState.createWithContent(contentState);\n      this.state = {\n        editorState\n      };\n    } else {\n      this.state = {\n        editorState: EditorState.createEmpty()\n      };\n    }\n  }\n\n  render() {\n    const editorState = this.state.editorState;\n    return React.createElement(\"div\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 35\n      },\n      __self: this\n    }, React.createElement(Editor, {\n      editorState: editorState,\n      editorStyle: {\n        border: '1px solid #ff9f43',\n        borderRadius: '10px',\n        height: 200,\n        padding: '0 20px'\n      },\n      onEditorStateChange: this.onEditorStateChange,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 36\n      },\n      __self: this\n    }));\n  }\n\n}","map":{"version":3,"sources":["/Users/ao/WebstormProjects/react-management/src/view/product/richTextEditor.jsx"],"names":["React","Component","EditorState","convertToRaw","ContentState","Editor","draftToHtml","htmlToDraft","RichTextEditor","constructor","props","onEditorStateChange","editorState","setState","html","contentBlock","contentState","createFromBlockArray","contentBlocks","createWithContent","state","createEmpty","render","border","borderRadius","height","padding"],"mappings":";AAAA,OAAOA,KAAP,IAAgBC,SAAhB,QAAiC,OAAjC;AACA,SAASC,WAAT,EAAsBC,YAAtB,EAAmCC,YAAnC,QAAsD,UAAtD;AACA,SAASC,MAAT,QAAuB,qBAAvB;AACA,OAAOC,WAAP,MAAwB,iBAAxB;AACA,OAAOC,WAAP,MAAwB,iBAAxB;AACA,OAAO,kDAAP;AAEA,eAAe,MAAMC,cAAN,SAA6BP,SAA7B,CAAuC;AAEtDQ,EAAAA,WAAW,CAACC,KAAD,EAAQ;AACf,UAAMA,KAAN;;AADe,SAgBjBC,mBAhBiB,GAgBgBC,WAAD,IAAiB;AAC/C,WAAKC,QAAL,CAAc;AACZD,QAAAA;AADY,OAAd;AAGD,KApBgB;;AAEf,UAAME,IAAI,GAAG,kDAAb;AACA,UAAMC,YAAY,GAAGR,WAAW,CAACO,IAAD,CAAhC;;AACA,QAAIC,YAAJ,EAAkB;AAChB,YAAMC,YAAY,GAAGZ,YAAY,CAACa,oBAAb,CAAkCF,YAAY,CAACG,aAA/C,CAArB;AACA,YAAMN,WAAW,GAAGV,WAAW,CAACiB,iBAAZ,CAA8BH,YAA9B,CAApB;AACA,WAAKI,KAAL,GAAa;AACXR,QAAAA;AADW,OAAb;AAGD,KAND,MAMK;AACL,WAAKQ,KAAL,GAAW;AACXR,QAAAA,WAAW,EAAEV,WAAW,CAACmB,WAAZ;AADF,OAAX;AAGC;AACF;;AAODC,EAAAA,MAAM,GAAG;AAAA,UACCV,WADD,GACiB,KAAKQ,KADtB,CACCR,WADD;AAEP,WACE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OACE,oBAAC,MAAD;AACE,MAAA,WAAW,EAAEA,WADf;AAEE,MAAA,WAAW,EAAE;AAACW,QAAAA,MAAM,EAAC,mBAAR;AAA4BC,QAAAA,YAAY,EAAC,MAAzC;AAAgDC,QAAAA,MAAM,EAAC,GAAvD;AAA2DC,QAAAA,OAAO,EAAC;AAAnE,OAFf;AAGE,MAAA,mBAAmB,EAAE,KAAKf,mBAH5B;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MADF,CADF;AAaD;;AAvCmD","sourcesContent":["import React, { Component } from 'react';\nimport { EditorState, convertToRaw,ContentState} from 'draft-js';\nimport { Editor } from 'react-draft-wysiwyg';\nimport draftToHtml from 'draftjs-to-html';\nimport htmlToDraft from 'html-to-draftjs';\nimport 'react-draft-wysiwyg/dist/react-draft-wysiwyg.css';\n\nexport default class RichTextEditor extends Component {\n\nconstructor(props) {\n    super(props);\n    const html = '<p>Hey this <strong>editor</strong> rocks ðŸ˜€</p>';\n    const contentBlock = htmlToDraft(html);\n    if (contentBlock) {\n      const contentState = ContentState.createFromBlockArray(contentBlock.contentBlocks);\n      const editorState = EditorState.createWithContent(contentState);\n      this.state = {\n        editorState,\n      };\n    }else{\n    this.state={\n    editorState: EditorState.createEmpty(),\n    }\n    }\n  }\n  onEditorStateChange: Function = (editorState) => {\n    this.setState({\n      editorState,\n    });\n  };\n\n  render() {\n    const { editorState } = this.state;\n    return (\n      <div>\n        <Editor\n          editorState={editorState}\n          editorStyle={{border:'1px solid #ff9f43',borderRadius:'10px',height:200,padding:'0 20px'}}\n          onEditorStateChange={this.onEditorStateChange}\n        />\n{/*         <textarea */}\n{/*           disabled */}\n{/*           value={draftToHtml(convertToRaw(editorState.getCurrentContent()))} */}\n{/*         /> */}\n      </div>\n    );\n  }\n}"]},"metadata":{},"sourceType":"module"}