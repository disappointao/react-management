{"ast":null,"code":"import \"antd/es/card/style\";\nimport _Card from \"antd/es/card\";\nimport \"antd/es/table/style\";\nimport _Table from \"antd/es/table\";\nimport \"antd/es/button/style\";\nimport _Button from \"antd/es/button\";\nimport \"antd/es/message/style\";\nimport _message from \"antd/es/message\";\nimport \"antd/es/modal/style\";\nimport _Modal from \"antd/es/modal\";\nvar _jsxFileName = \"/Users/ao/WebstormProjects/react-management/src/view/user/user.jsx\";\nimport React, { Component } from 'react';\nimport LinkButton from '../../components/link-button/button';\nimport UserForm from './user-form';\nimport { reqUsers, reqDeleteUser, reqAddUser } from '../../api/index';\nimport { formateDate } from '../../utils/dateUtils';\nexport default class User extends Component {\n  constructor(...args) {\n    super(...args);\n    this.state = {\n      columns: [],\n      users: [],\n      roles: [],\n      isShow: false\n    };\n\n    this.initRoles = roles => {\n      const roleNames = roles.reduce((pre, role) => {\n        pre[role._id] = role.name;\n        return pre;\n      }, {});\n      this.roleNames = roleNames;\n    };\n\n    this.showUpdate = user => {};\n\n    this.deleteUser = user => {\n      _Modal.confirm({\n        title: '删除用户',\n        content: \"\\u786E\\u8BA4\\u5220\\u9664\\u7528\\u6237 \".concat(user.username, \" \\u5417\"),\n        okText: \"确认\",\n        cancelText: '取消',\n        onOk: async () => {\n          const result = await reqDeleteUser(user._id);\n\n          if (result.status === 0) {\n            _message.success('删除成功');\n\n            this.initUsers();\n          } else {\n            _message.error('删除失败');\n          }\n        }\n      });\n    };\n\n    this.addOrUpdateUser = () => {\n      this.form.validateFields(async (err, data) => {\n        if (!err) {\n          const result = await reqAddUser(data);\n\n          if (result.status === 0) {\n            this.form.res;\n\n            _message.success('添加成功');\n\n            this.setState({\n              isShow: false\n            });\n            this.initUsers();\n          } else {\n            _message.error(result.msg);\n          }\n        } else {\n          _message.error('信息录入不完整');\n        }\n      });\n    };\n  }\n\n  initColumns() {\n    this.setState({\n      columns: [{\n        title: '用户名',\n        dataIndex: 'username',\n        align: 'center'\n      }, {\n        title: '邮箱',\n        align: 'center',\n        dataIndex: 'email'\n      }, {\n        title: '电话',\n        dataIndex: 'phone',\n        align: 'center'\n      }, {\n        title: '注册时间',\n        align: 'center',\n        dataIndex: 'create_time',\n        render: time => formateDate(time)\n      }, {\n        title: '所属角色',\n        align: 'center',\n        dataIndex: 'role_id',\n        render: role_id => this.roleNames[role_id]\n      }, {\n        title: '操作',\n        align: 'center',\n        render: user => React.createElement(\"span\", {\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 50\n          },\n          __self: this\n        }, React.createElement(LinkButton, {\n          onClick: () => this.showUpdate(user),\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 51\n          },\n          __self: this\n        }, \"\\u4FEE\\u6539\"), React.createElement(LinkButton, {\n          onClick: () => this.deleteUser(user),\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 52\n          },\n          __self: this\n        }, \"\\u5220\\u9664\"))\n      }]\n    });\n  }\n\n  async initUsers() {\n    const result = await reqUsers();\n\n    if (result.status === 0) {\n      const _result$data = result.data,\n            users = _result$data.users,\n            roles = _result$data.roles;\n      this.initRoles(roles);\n      this.setState({\n        users,\n        roles\n      });\n    }\n  }\n\n  componentWillMount() {\n    this.initColumns();\n  }\n\n  componentDidMount() {\n    this.initUsers();\n  }\n\n  render() {\n    const title = React.createElement(_Button, {\n      type: 'primary',\n      onClick: () => this.setState({\n        isShow: true\n      }),\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 124\n      },\n      __self: this\n    }, \"\\u521B\\u5EFA\\u7528\\u6237\");\n    const _this$state = this.state,\n          columns = _this$state.columns,\n          users = _this$state.users,\n          isShow = _this$state.isShow,\n          roles = _this$state.roles;\n    return React.createElement(_Card, {\n      title: title,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 130\n      },\n      __self: this\n    }, React.createElement(_Table, {\n      rowKey: \"_id\",\n      bordered: true,\n      columns: columns,\n      dataSource: users,\n      pagination: {\n        defaultPageSize: 4\n      },\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 131\n      },\n      __self: this\n    }), React.createElement(_Modal, {\n      title: \"\\u6DFB\\u52A0\\u7528\\u6237\",\n      visible: isShow,\n      onOk: () => this.addOrUpdateUser(),\n      onCancel: () => this.setState({\n        isShow: false\n      }),\n      cancelText: \"\\u53D6\\u6D88\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 138\n      },\n      __self: this\n    }, React.createElement(UserForm, {\n      setForm: form => {\n        this.form = form;\n      },\n      roles: roles,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 145\n      },\n      __self: this\n    })));\n  }\n\n}","map":{"version":3,"sources":["/Users/ao/WebstormProjects/react-management/src/view/user/user.jsx"],"names":["React","Component","LinkButton","UserForm","reqUsers","reqDeleteUser","reqAddUser","formateDate","User","state","columns","users","roles","isShow","initRoles","roleNames","reduce","pre","role","_id","name","showUpdate","user","deleteUser","confirm","title","content","username","okText","cancelText","onOk","result","status","success","initUsers","error","addOrUpdateUser","form","validateFields","err","data","res","setState","msg","initColumns","dataIndex","align","render","time","role_id","componentWillMount","componentDidMount","defaultPageSize"],"mappings":";;;;;;;;;;;AAAA,OAAQA,KAAR,IAAeC,SAAf,QAA+B,OAA/B;AAGA,OAAOC,UAAP,MAAuB,qCAAvB;AACA,OAAOC,QAAP,MAAqB,aAArB;AACA,SAAQC,QAAR,EAAiBC,aAAjB,EAA+BC,UAA/B,QAAgD,iBAAhD;AACA,SAAQC,WAAR,QAA0B,uBAA1B;AACA,eAAe,MAAMC,IAAN,SAAoBP,SAApB,CAA8B;AAAA;AAAA;AAAA,SAC3CQ,KAD2C,GACrC;AACJC,MAAAA,OAAO,EAAC,EADJ;AAEJC,MAAAA,KAAK,EAAC,EAFF;AAGJC,MAAAA,KAAK,EAAC,EAHF;AAIJC,MAAAA,MAAM,EAAC;AAJH,KADqC;;AAAA,SA8D3CC,SA9D2C,GA8DhCF,KAAD,IAAS;AACjB,YAAMG,SAAS,GAACH,KAAK,CAACI,MAAN,CAAa,CAACC,GAAD,EAAKC,IAAL,KAAY;AACvCD,QAAAA,GAAG,CAACC,IAAI,CAACC,GAAN,CAAH,GAAcD,IAAI,CAACE,IAAnB;AACA,eAAOH,GAAP;AACD,OAHe,EAGd,EAHc,CAAhB;AAIA,WAAKF,SAAL,GAAeA,SAAf;AACD,KApE0C;;AAAA,SAqE3CM,UArE2C,GAqE/BC,IAAD,IAAQ,CAElB,CAvE0C;;AAAA,SAwE3CC,UAxE2C,GAwE/BD,IAAD,IAAQ;AACjB,aAAME,OAAN,CAAc;AACZC,QAAAA,KAAK,EAAC,MADM;AAEZC,QAAAA,OAAO,iDAAWJ,IAAI,CAACK,QAAhB,YAFK;AAGZC,QAAAA,MAAM,EAAC,IAHK;AAIZC,QAAAA,UAAU,EAAC,IAJC;AAKZC,QAAAA,IAAI,EAAC,YAAU;AACb,gBAAMC,MAAM,GAAC,MAAM1B,aAAa,CAACiB,IAAI,CAACH,GAAN,CAAhC;;AACA,cAAGY,MAAM,CAACC,MAAP,KAAgB,CAAnB,EAAqB;AACnB,qBAAQC,OAAR,CAAgB,MAAhB;;AACA,iBAAKC,SAAL;AACD,WAHD,MAGK;AACH,qBAAQC,KAAR,CAAc,MAAd;AACD;AACF;AAbW,OAAd;AAeD,KAxF0C;;AAAA,SAyF3CC,eAzF2C,GAyF3B,MAAI;AAClB,WAAKC,IAAL,CAAUC,cAAV,CAAyB,OAAOC,GAAP,EAAWC,IAAX,KAAkB;AACzC,YAAG,CAACD,GAAJ,EAAQ;AACN,gBAAMR,MAAM,GAAC,MAAMzB,UAAU,CAACkC,IAAD,CAA7B;;AACA,cAAGT,MAAM,CAACC,MAAP,KAAgB,CAAnB,EAAqB;AACnB,iBAAKK,IAAL,CAAUI,GAAV;;AACA,qBAAQR,OAAR,CAAgB,MAAhB;;AACA,iBAAKS,QAAL,CAAc;AACZ7B,cAAAA,MAAM,EAAC;AADK,aAAd;AAGA,iBAAKqB,SAAL;AACD,WAPD,MAOK;AACH,qBAAQC,KAAR,CAAcJ,MAAM,CAACY,GAArB;AACD;AACF,SAZD,MAYK;AACH,mBAAQR,KAAR,CAAc,SAAd;AACD;AACF,OAhBD;AAiBD,KA3G0C;AAAA;;AAO3CS,EAAAA,WAAW,GAAE;AACX,SAAKF,QAAL,CAAc;AACZhC,MAAAA,OAAO,EAAC,CACN;AACEe,QAAAA,KAAK,EAAE,KADT;AAEEoB,QAAAA,SAAS,EAAE,UAFb;AAGEC,QAAAA,KAAK,EAAC;AAHR,OADM,EAMN;AACErB,QAAAA,KAAK,EAAE,IADT;AAEEqB,QAAAA,KAAK,EAAC,QAFR;AAGED,QAAAA,SAAS,EAAE;AAHb,OANM,EAYN;AACEpB,QAAAA,KAAK,EAAE,IADT;AAEEoB,QAAAA,SAAS,EAAE,OAFb;AAGEC,QAAAA,KAAK,EAAC;AAHR,OAZM,EAiBN;AACErB,QAAAA,KAAK,EAAE,MADT;AAEEqB,QAAAA,KAAK,EAAC,QAFR;AAGED,QAAAA,SAAS,EAAE,aAHb;AAIEE,QAAAA,MAAM,EAAEC,IAAD,IAAQzC,WAAW,CAACyC,IAAD;AAJ5B,OAjBM,EAuBN;AACEvB,QAAAA,KAAK,EAAE,MADT;AAEEqB,QAAAA,KAAK,EAAC,QAFR;AAGED,QAAAA,SAAS,EAAE,SAHb;AAIEE,QAAAA,MAAM,EAAEE,OAAD,IAAW,KAAKlC,SAAL,CAAekC,OAAf;AAJpB,OAvBM,EA6BN;AACExB,QAAAA,KAAK,EAAE,IADT;AAEEqB,QAAAA,KAAK,EAAC,QAFR;AAGEC,QAAAA,MAAM,EAAGzB,IAAD,IACJ;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,WACF,oBAAC,UAAD;AAAY,UAAA,OAAO,EAAE,MAAM,KAAKD,UAAL,CAAgBC,IAAhB,CAA3B;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,0BADE,EAEF,oBAAC,UAAD;AAAY,UAAA,OAAO,EAAE,MAAM,KAAKC,UAAL,CAAgBD,IAAhB,CAA3B;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,0BAFE;AAJN,OA7BM;AADI,KAAd;AA0CD;;AACD,QAAMY,SAAN,GAAiB;AACf,UAAMH,MAAM,GAAE,MAAM3B,QAAQ,EAA5B;;AACA,QAAG2B,MAAM,CAACC,MAAP,KAAgB,CAAnB,EAAqB;AAAA,2BACCD,MAAM,CAACS,IADR;AAAA,YACZ7B,KADY,gBACZA,KADY;AAAA,YACNC,KADM,gBACNA,KADM;AAEnB,WAAKE,SAAL,CAAeF,KAAf;AACA,WAAK8B,QAAL,CAAc;AACZ/B,QAAAA,KADY;AAEZC,QAAAA;AAFY,OAAd;AAID;AACF;;AA+CDsC,EAAAA,kBAAkB,GAAG;AACpB,SAAKN,WAAL;AACA;;AACDO,EAAAA,iBAAiB,GAAE;AACjB,SAAKjB,SAAL;AACD;;AACDa,EAAAA,MAAM,GAAG;AACP,UAAMtB,KAAK,GACP;AAAQ,MAAA,IAAI,EAAE,SAAd;AAAyB,MAAA,OAAO,EAAE,MAAI,KAAKiB,QAAL,CAAc;AAAC7B,QAAAA,MAAM,EAAC;AAAR,OAAd,CAAtC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kCADJ;AADO,wBAM4B,KAAKJ,KANjC;AAAA,UAMAC,OANA,eAMAA,OANA;AAAA,UAMQC,KANR,eAMQA,KANR;AAAA,UAMcE,MANd,eAMcA,MANd;AAAA,UAMqBD,KANrB,eAMqBA,KANrB;AAOP,WACI;AAAM,MAAA,KAAK,EAAEa,KAAb;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OACE;AACI,MAAA,MAAM,EAAC,KADX;AAEI,MAAA,QAAQ,EAAE,IAFd;AAGI,MAAA,OAAO,EAAEf,OAHb;AAII,MAAA,UAAU,EAAEC,KAJhB;AAKI,MAAA,UAAU,EAAE;AAACyC,QAAAA,eAAe,EAAC;AAAjB,OALhB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MADF,EAQE;AACI,MAAA,KAAK,EAAC,0BADV;AAEI,MAAA,OAAO,EAAEvC,MAFb;AAGI,MAAA,IAAI,EAAE,MAAI,KAAKuB,eAAL,EAHd;AAII,MAAA,QAAQ,EAAE,MAAI,KAAKM,QAAL,CAAc;AAAC7B,QAAAA,MAAM,EAAC;AAAR,OAAd,CAJlB;AAKI,MAAA,UAAU,EAAC,cALf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OAOE,oBAAC,QAAD;AACI,MAAA,OAAO,EAAGwB,IAAD,IAAQ;AAAC,aAAKA,IAAL,GAAUA,IAAV;AAAe,OADrC;AAEI,MAAA,KAAK,EAAEzB,KAFX;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MAPF,CARF,CADJ;AAuBD;;AAhJ0C","sourcesContent":["import  React,{Component} from 'react';\nimport {Card,Table,Button,Modal,message} from 'antd';\n\nimport LinkButton from '../../components/link-button/button';\nimport UserForm from './user-form';\nimport {reqUsers,reqDeleteUser,reqAddUser} from '../../api/index';\nimport {formateDate} from '../../utils/dateUtils';\nexport default class User extends  Component {\n  state={\n    columns:[],\n    users:[],\n    roles:[],\n    isShow:false\n  };\n  initColumns(){\n    this.setState({\n      columns:[\n        {\n          title: '用户名',\n          dataIndex: 'username',\n          align:'center'\n        },\n        {\n          title: '邮箱',\n          align:'center',\n          dataIndex: 'email'\n        },\n\n        {\n          title: '电话',\n          dataIndex: 'phone',\n          align:'center'\n        },\n        {\n          title: '注册时间',\n          align:'center',\n          dataIndex: 'create_time',\n          render:(time)=>formateDate(time)\n        },\n        {\n          title: '所属角色',\n          align:'center',\n          dataIndex: 'role_id',\n          render:(role_id)=>this.roleNames[role_id]\n        },\n        {\n          title: '操作',\n          align:'center',\n          render: (user) => (\n              <span>\n            <LinkButton onClick={() => this.showUpdate(user)}>修改</LinkButton>\n            <LinkButton onClick={() => this.deleteUser(user)}>删除</LinkButton>\n          </span>\n          )\n        },\n      ]\n    })\n  }\n  async initUsers(){\n    const result= await reqUsers();\n    if(result.status===0){\n      const {users,roles}=result.data;\n      this.initRoles(roles);\n      this.setState({\n        users,\n        roles\n      });\n    }\n  }\n  initRoles=(roles)=>{\n    const roleNames=roles.reduce((pre,role)=>{\n      pre[role._id]=role.name;\n      return pre;\n    },{});\n    this.roleNames=roleNames;\n  };\n  showUpdate=(user)=>{\n\n  };\n  deleteUser=(user)=>{\n    Modal.confirm({\n      title:'删除用户',\n      content:`确认删除用户 ${user.username} 吗`,\n      okText:\"确认\",\n      cancelText:'取消',\n      onOk:async ()=>{\n        const result=await reqDeleteUser(user._id);\n        if(result.status===0){\n          message.success('删除成功');\n          this.initUsers();\n        }else{\n          message.error('删除失败');\n        }\n      }\n    })\n  };\n  addOrUpdateUser=()=>{\n    this.form.validateFields(async (err,data)=>{\n      if(!err){\n        const result=await reqAddUser(data);\n        if(result.status===0){\n          this.form.res\n          message.success('添加成功');\n          this.setState({\n            isShow:false\n          });\n          this.initUsers();\n        }else{\n          message.error(result.msg);\n        }\n      }else{\n        message.error('信息录入不完整');\n      }\n    })\n  };\n  componentWillMount() {\n   this.initColumns();\n  }\n  componentDidMount(){\n    this.initUsers();\n  }\n  render() {\n    const title=(\n        <Button type={'primary'} onClick={()=>this.setState({isShow:true})}>\n          创建用户\n        </Button>\n    );\n    const {columns,users,isShow,roles}=this.state;\n    return (\n        <Card title={title}>\n          <Table\n              rowKey='_id'\n              bordered={true}\n              columns={columns}\n              dataSource={users}\n              pagination={{defaultPageSize:4}}\n          />\n          <Modal\n              title='添加用户'\n              visible={isShow}\n              onOk={()=>this.addOrUpdateUser()}\n              onCancel={()=>this.setState({isShow:false})}\n              cancelText='取消'\n          >\n            <UserForm\n                setForm={(form)=>{this.form=form}}\n                roles={roles}\n            />\n          </Modal>\n        </Card>\n    );\n  }\n}"]},"metadata":{},"sourceType":"module"}