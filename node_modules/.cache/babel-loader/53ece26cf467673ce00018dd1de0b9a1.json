{"ast":null,"code":"import \"antd/es/modal/style\";\nimport _Modal from \"antd/es/modal\";\nimport \"antd/es/upload/style\";\nimport _Upload from \"antd/es/upload\";\nimport \"antd/es/icon/style\";\nimport _Icon from \"antd/es/icon\";\nimport \"antd/es/message/style\";\nimport _message from \"antd/es/message\";\nvar _jsxFileName = \"/Users/ao/WebstormProjects/react-management/src/view/product/picturesWall.jsx\";\nimport React from 'react';\nimport PropTypes from 'prop-types';\nimport { reqDeleteImg } from '../../api/index';\nimport { BASE_IMG_URL } from '../../utils/contains';\n\nfunction getBase64(file) {\n  return new Promise((resolve, reject) => {\n    const reader = new FileReader();\n    reader.readAsDataURL(file);\n\n    reader.onload = () => resolve(reader.result);\n\n    reader.onerror = error => reject(error);\n  });\n}\n\nexport default class PicturesWall extends React.Component {\n  constructor(props) {\n    super(props);\n\n    this.getImg = () => this.state.fileList.map(img => img.name);\n\n    this.handleCancel = () => this.setState({\n      previewVisible: false\n    });\n\n    this.handlePreview = async file => {\n      if (!file.url && !file.preview) {\n        file.preview = await getBase64(file.originFileObj);\n      }\n\n      this.setState({\n        previewImage: file.url || file.preview,\n        previewVisible: true\n      });\n    };\n\n    this.handleChange = async ({\n      file,\n      fileList\n    }) => {\n      if (file.status == 'done') {\n        const result = file.response;\n\n        if (result.status === 0) {\n          _message.success('上传图片成功!');\n\n          const _result$data = result.data,\n                name = _result$data.name,\n                url = _result$data.url;\n          file = fileList[fileList.length - 1];\n          file.name = name;\n          file.url = url;\n        } else {\n          _message.error('上传图片失败');\n        }\n      } else if (file.status == 'removed') {\n        const result = await reqDeleteImg(file.name);\n\n        if (result.status === 0) {\n          _message.success('删除图片成功!');\n        } else {\n          _message.error('删除图片失败!');\n        }\n      }\n\n      this.setState({\n        fileList\n      });\n    };\n\n    let _fileList = [];\n    const imgs = this.props.imgs;\n\n    if (imgs && imgs.length > 0) {\n      _fileList = imgs.map((img, index) => ({\n        uid: -index,\n        name: img,\n        status: 'done',\n        url: BASE_IMG_URL + img\n      }));\n    }\n\n    this.state = {\n      previewVisible: false,\n      previewImage: '',\n      fileList: _fileList\n    };\n  }\n\n  render() {\n    const _this$state = this.state,\n          previewVisible = _this$state.previewVisible,\n          previewImage = _this$state.previewImage,\n          fileList = _this$state.fileList;\n    const uploadButton = React.createElement(\"div\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 83\n      },\n      __self: this\n    }, React.createElement(_Icon, {\n      type: \"plus\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 84\n      },\n      __self: this\n    }), React.createElement(\"div\", {\n      className: \"ant-upload-text\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 85\n      },\n      __self: this\n    }, \"Upload\"));\n    return React.createElement(\"div\", {\n      className: \"clearfix\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 89\n      },\n      __self: this\n    }, React.createElement(_Upload, {\n      action: \"/manage/img/upload\",\n      accept: \"image/*\",\n      name: \"image\",\n      listType: \"picture-card\",\n      fileList: fileList,\n      onPreview: this.handlePreview,\n      onChange: this.handleChange,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 90\n      },\n      __self: this\n    }, fileList.length >= 4 ? null : uploadButton), React.createElement(_Modal, {\n      visible: previewVisible,\n      footer: null,\n      onCancel: this.handleCancel,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 101\n      },\n      __self: this\n    }, React.createElement(\"img\", {\n      alt: \"example\",\n      style: {\n        width: '100%'\n      },\n      src: previewImage,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 102\n      },\n      __self: this\n    })));\n  }\n\n}\nPicturesWall.propTypes = {\n  imgs: PropTypes.array\n};","map":{"version":3,"sources":["/Users/ao/WebstormProjects/react-management/src/view/product/picturesWall.jsx"],"names":["React","PropTypes","reqDeleteImg","BASE_IMG_URL","getBase64","file","Promise","resolve","reject","reader","FileReader","readAsDataURL","onload","result","onerror","error","PicturesWall","Component","constructor","props","getImg","state","fileList","map","img","name","handleCancel","setState","previewVisible","handlePreview","url","preview","originFileObj","previewImage","handleChange","status","response","success","data","length","imgs","index","uid","render","uploadButton","width","propTypes","array"],"mappings":"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","sourcesContent":["import React from 'react';\nimport { Upload, Icon, Modal,message} from 'antd';\nimport PropTypes from 'prop-types';\n\nimport {reqDeleteImg} from '../../api/index';\nimport {BASE_IMG_URL} from '../../utils/contains';\nfunction getBase64(file) {\n  return new Promise((resolve, reject) => {\n    const reader = new FileReader();\n    reader.readAsDataURL(file);\n    reader.onload = () => resolve(reader.result);\n    reader.onerror = error => reject(error);\n  });\n}\n\nexport default class PicturesWall extends React.Component {\n  static propTypes={\n    imgs:PropTypes.array,\n  };\n  constructor(props){\n    super(props);\n    let fileList=[];\n    const {imgs} = this.props;\n    if (imgs && imgs.length>0) {\n      fileList = imgs.map((img, index) => ({\n        uid: -index,\n        name: img,\n        status: 'done',\n        url: BASE_IMG_URL + img\n      }))\n    }\n    this.state = {\n      previewVisible: false,\n      previewImage: '',\n      fileList,\n    };\n  }\n\n\n\n  getImg=()=>this.state.fileList.map((img)=>img.name);\n  handleCancel = () => this.setState({ previewVisible: false });\n\n  handlePreview = async file => {\n    if (!file.url && !file.preview) {\n      file.preview = await getBase64(file.originFileObj);\n    }\n\n    this.setState({\n      previewImage: file.url || file.preview,\n      previewVisible: true,\n    });\n  };\n\n  handleChange = async ({ file,fileList }) =>{\n    if(file.status=='done'){\n      const result = file.response  ;\n      if(result.status===0) {\n        message.success('上传图片成功!');\n        const {name, url} = result.data;\n        file = fileList[fileList.length-1];\n        file.name = name;\n        file.url = url;\n      } else {\n        message.error('上传图片失败')\n      }\n    }else if (file.status=='removed'){\n      const result = await reqDeleteImg(file.name)\n      if (result.status===0) {\n        message.success('删除图片成功!')\n      } else {\n        message.error('删除图片失败!')\n      }\n    }\n    this.setState({ fileList }\n    );\n  };\n\n\n  render() {\n    const { previewVisible, previewImage, fileList } = this.state;\n    const uploadButton = (\n        <div>\n          <Icon type=\"plus\" />\n          <div className=\"ant-upload-text\">Upload</div>\n        </div>\n    );\n    return (\n        <div className=\"clearfix\">\n          <Upload\n              action=\"/manage/img/upload\"\n              accept='image/*'\n              name='image'\n              listType=\"picture-card\"\n              fileList={fileList}\n              onPreview={this.handlePreview}\n              onChange={this.handleChange}\n          >\n            {fileList.length >= 4 ? null : uploadButton}\n          </Upload>\n          <Modal visible={previewVisible} footer={null} onCancel={this.handleCancel}>\n            <img alt=\"example\" style={{ width: '100%' }} src={previewImage} />\n          </Modal>\n        </div>\n    );\n  }\n}\n"]},"metadata":{},"sourceType":"module"}