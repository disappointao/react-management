{"ast":null,"code":"import \"antd/es/icon/style\";\nimport _Icon from \"antd/es/icon\";\nimport \"antd/es/layout/style\";\nimport _Layout from \"antd/es/layout\";\nimport \"antd/es/menu/style\";\nimport _Menu from \"antd/es/menu\";\nvar _jsxFileName = \"/Users/ao/WebstormProjects/react-management/src/components/nav/nav.jsx\";\nimport React, { Component } from 'react';\nimport { Link, withRouter } from 'react-router-dom';\nimport menuList from '../../config/menuConfig';\nimport logo from '../../assets/images/logo.png';\nimport memoryUser from '../../utils/memoryUtils';\nimport './nav.less';\nconst SubMenu = _Menu.SubMenu;\nconst Sider = _Layout.Sider;\n\nclass Nav extends Component {\n  constructor(...args) {\n    super(...args);\n\n    this.getMenuNodes = menuList => {\n      return menuList.map(item => {\n        if (this.hasAthu) {\n          if (!item.children) {\n            return React.createElement(_Menu.Item, {\n              key: item.key,\n              __source: {\n                fileName: _jsxFileName,\n                lineNumber: 18\n              },\n              __self: this\n            }, React.createElement(Link, {\n              to: item.key,\n              __source: {\n                fileName: _jsxFileName,\n                lineNumber: 19\n              },\n              __self: this\n            }, React.createElement(_Icon, {\n              type: item.icon,\n              __source: {\n                fileName: _jsxFileName,\n                lineNumber: 20\n              },\n              __self: this\n            }), React.createElement(\"span\", {\n              __source: {\n                fileName: _jsxFileName,\n                lineNumber: 21\n              },\n              __self: this\n            }, item.title)));\n          } else {\n            const cItem = item.children.find(cItem => this.props.location.pathname.indexOf(cItem.key) === 0);\n\n            if (cItem) {\n              this.openKey = item.key;\n            }\n\n            return React.createElement(SubMenu, {\n              key: item.key,\n              title: React.createElement(\"span\", {\n                __source: {\n                  fileName: _jsxFileName,\n                  lineNumber: 34\n                },\n                __self: this\n              }, React.createElement(_Icon, {\n                type: item.icon,\n                __source: {\n                  fileName: _jsxFileName,\n                  lineNumber: 35\n                },\n                __self: this\n              }), React.createElement(\"span\", {\n                __source: {\n                  fileName: _jsxFileName,\n                  lineNumber: 36\n                },\n                __self: this\n              }, item.title)),\n              __source: {\n                fileName: _jsxFileName,\n                lineNumber: 31\n              },\n              __self: this\n            }, this.getMenuNodes(item.children));\n          }\n        }\n      });\n    };\n  }\n\n  componentWillMount() {\n    this.menuNodes = this.getMenuNodes(menuList);\n  }\n\n  render() {\n    console.log(memoryUser.user);\n    let path = this.props.location.pathname;\n\n    if (path.indexOf('/product') === 0) {\n      path = '/product';\n    }\n\n    return React.createElement(Sider, {\n      style: {\n        backgroundColor: '#2f4050',\n        position: 'fixed',\n        height: '100%'\n      },\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 58\n      },\n      __self: this\n    }, React.createElement(\"div\", {\n      className: \"left-nav-header\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 63\n      },\n      __self: this\n    }, React.createElement(\"img\", {\n      src: logo,\n      alt: \"\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 64\n      },\n      __self: this\n    }), React.createElement(\"h1\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 65\n      },\n      __self: this\n    }, \"\\u5218\\u521B\\u51F9\")), React.createElement(_Menu, {\n      theme: \"dark\",\n      defaultSelectedKeys: ['1'],\n      mode: \"inline\",\n      style: {\n        backgroundColor: '#2f4050'\n      },\n      selectedKeys: [path],\n      defaultOpenKeys: [this.openKey],\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 67\n      },\n      __self: this\n    }, this.menuNodes));\n  }\n\n}\n\nexport default withRouter(Nav);","map":{"version":3,"sources":["/Users/ao/WebstormProjects/react-management/src/components/nav/nav.jsx"],"names":["React","Component","Link","withRouter","menuList","logo","memoryUser","SubMenu","Sider","Nav","getMenuNodes","map","item","hasAthu","children","key","icon","title","cItem","find","props","location","pathname","indexOf","openKey","componentWillMount","menuNodes","render","console","log","user","path","backgroundColor","position","height"],"mappings":"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","sourcesContent":["import React, {Component} from 'react';\nimport {Menu, Icon, Layout} from 'antd';\nimport {Link,withRouter} from 'react-router-dom';\n\nimport menuList from '../../config/menuConfig';\nimport logo from '../../assets/images/logo.png';\nimport memoryUser from '../../utils/memoryUtils';\nimport './nav.less';\n\nconst SubMenu = Menu.SubMenu;\nconst Sider = Layout.Sider;\nclass Nav extends Component {\n  getMenuNodes = (menuList) => {\n    return menuList.map(item => {\n      if(this.hasAthu){\n        if (!item.children) {\n          return (\n              <Menu.Item key={item.key}>\n                <Link to={item.key}>\n                  <Icon type={item.icon}/>\n                  <span>{item.title}</span>\n                </Link>\n              </Menu.Item>\n          );\n        } else {\n          const cItem=item.children.find(cItem=>this.props.location.pathname.indexOf(cItem.key)===0);\n          if(cItem){\n            this.openKey=item.key;\n          }\n          return (\n              <SubMenu\n                  key={item.key}\n                  title={\n                    <span>\n              <Icon type={item.icon}/>\n              <span>{item.title}</span>\n            </span>\n                  }\n              >\n                {this.getMenuNodes(item.children)}\n              </SubMenu>\n          );\n        }\n      }\n    });\n  };\n  componentWillMount() {\n    this.menuNodes=this.getMenuNodes(menuList);\n  }\n\n  render() {\n    console.log(memoryUser.user);\n    let path=this.props.location.pathname;\n    if(path.indexOf('/product')===0){\n      path='/product';\n    }\n    return (\n        <Sider style={{\n          backgroundColor: '#2f4050',\n          position: 'fixed',\n          height: '100%',\n        }}>\n          <div className=\"left-nav-header\">\n            <img src={logo} alt=\"\"/>\n            <h1>刘创凹</h1>\n          </div>\n          <Menu theme='dark' defaultSelectedKeys={['1']} mode=\"inline\"\n                style={{backgroundColor: '#2f4050'}} selectedKeys={[path]} defaultOpenKeys={[this.openKey]}>\n            {this.menuNodes}\n          </Menu>\n        </Sider>\n    );\n  }\n}\nexport default withRouter(Nav);"]},"metadata":{},"sourceType":"module"}