{"ast":null,"code":"import \"antd/es/button/style\";\nimport _Button from \"antd/es/button\";\nimport \"antd/es/form/style\";\nimport _Form from \"antd/es/form\";\nimport \"antd/es/input/style\";\nimport _Input from \"antd/es/input\";\nimport \"antd/es/icon/style\";\nimport _Icon from \"antd/es/icon\";\nimport \"antd/es/message/style\";\nimport _message from \"antd/es/message\";\nvar _jsxFileName = \"/Users/ao/Desktop/management/src/view/login/login.jsx\";\nimport React, { Component } from 'react';\nimport { Redirect } from 'react-router-dom';\nimport logo from '../../assets/images/logo.png';\nimport './login.less';\nimport { reqLogin } from '../../api/index';\nimport memoryUtils from '../../utils/memoryUtils';\nimport storageUtils from '../../utils/storageUtils';\n\nclass Login extends Component {\n  constructor(...args) {\n    super(...args);\n\n    this.handleSubmit = event => {\n      event.preventDefault();\n      this.props.form.validateFields(async (err, values) => {\n        if (!err) {\n          const username = values.username,\n                password = values.password;\n          let response = await reqLogin(username, password);\n\n          if (response.status === 0) {\n            _message.success('登录成功！');\n\n            memoryUtils.user = response.data;\n            storageUtils.saveUser(response.data);\n            this.props.history.replace('/');\n          } else {\n            _message.error('账号或密码错误');\n          }\n        }\n      });\n    };\n\n    this.validator = (rule, value, callback) => {\n      if (!value) {\n        callback('请输入用户名');\n      } else if (!/^[a-zA-Z0-9_]+$/.test(value)) {\n        callback('非法用户名');\n      } else if (value.length < 4) {\n        callback('用户名长度不小于4位');\n      } else if (value.length > 10) {\n        callback('用户名长度不超过10位');\n      } else {\n        callback();\n      }\n    };\n  }\n\n  render() {\n    const user = memoryUtils.user;\n\n    if (user && user._id) {\n      return React.createElement(Redirect, {\n        to: \"/\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 51\n        },\n        __self: this\n      });\n    }\n\n    const form = this.props.form;\n    const getFieldDecorator = form.getFieldDecorator;\n    return React.createElement(\"div\", {\n      className: \"login\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 56\n      },\n      __self: this\n    }, React.createElement(\"header\", {\n      className: \"login-header\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 57\n      },\n      __self: this\n    }, React.createElement(\"img\", {\n      src: logo,\n      alt: \"logo\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 58\n      },\n      __self: this\n    }), React.createElement(\"h1\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 59\n      },\n      __self: this\n    }, \"XXX\\u540E\\u53F0\\u7BA1\\u7406\\u7CFB\\u7EDF\")), React.createElement(\"section\", {\n      className: \"login-content\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 61\n      },\n      __self: this\n    }, React.createElement(\"h2\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 62\n      },\n      __self: this\n    }, \"\\u7528\\u6237\\u767B\\u9646\"), React.createElement(_Form, {\n      onSubmit: this.handleSubmit,\n      className: \"login-form\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 63\n      },\n      __self: this\n    }, React.createElement(_Form.Item, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 64\n      },\n      __self: this\n    }, getFieldDecorator('username', {\n      rules: [{\n        validator: this.validator\n      }]\n    })(React.createElement(_Input, {\n      prefix: React.createElement(_Icon, {\n        type: \"user\",\n        style: {\n          color: 'rgba(0,0,0,.25)'\n        },\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 72\n        },\n        __self: this\n      }),\n      placeholder: \"\\u7528\\u6237\\u540D\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 72\n      },\n      __self: this\n    }))), React.createElement(_Form.Item, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 77\n      },\n      __self: this\n    }, getFieldDecorator('password', {\n      rules: [{\n        required: true,\n        message: '请输入密码'\n      }]\n    })(React.createElement(_Input, {\n      prefix: React.createElement(_Icon, {\n        type: \"lock\",\n        style: {\n          color: 'rgba(0,0,0,.25)'\n        },\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 86\n        },\n        __self: this\n      }),\n      type: \"password\",\n      placeholder: \"\\u5BC6\\u7801\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 86\n      },\n      __self: this\n    }))), React.createElement(_Form.Item, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 92\n      },\n      __self: this\n    }, React.createElement(_Button, {\n      type: \"primary\",\n      htmlType: \"submit\",\n      className: \"login-form-button\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 93\n      },\n      __self: this\n    }, \"\\u767B\\u9646\")))));\n  }\n\n}\n\nconst WrapLogin = _Form.create()(Login);\n\nexport default WrapLogin;","map":{"version":3,"sources":["/Users/ao/Desktop/management/src/view/login/login.jsx"],"names":["React","Component","Redirect","logo","reqLogin","memoryUtils","storageUtils","Login","handleSubmit","event","preventDefault","props","form","validateFields","err","values","username","password","response","status","success","user","data","saveUser","history","replace","error","validator","rule","value","callback","test","length","render","_id","getFieldDecorator","rules","color","required","message","WrapLogin","create"],"mappings":";;;;;;;;;;;AAAA,OAAOA,KAAP,IAAeC,SAAf,QAA+B,OAA/B;AACA,SAAQC,QAAR,QAAuB,kBAAvB;AAQA,OAAOC,IAAP,MAAiB,8BAAjB;AACA,OAAO,cAAP;AACA,SAAQC,QAAR,QAAuB,iBAAvB;AACA,OAAOC,WAAP,MAAwB,yBAAxB;AACA,OAAOC,YAAP,MAAyB,0BAAzB;;AAEA,MAAMC,KAAN,SAAoBN,SAApB,CAA8B;AAAA;AAAA;;AAAA,SAC5BO,YAD4B,GACbC,KAAK,IAAI;AACtBA,MAAAA,KAAK,CAACC,cAAN;AACA,WAAKC,KAAL,CAAWC,IAAX,CAAgBC,cAAhB,CAA+B,OAAOC,GAAP,EAAYC,MAAZ,KAAuB;AACpD,YAAI,CAACD,GAAL,EAAU;AAAA,gBACDE,QADC,GACqBD,MADrB,CACDC,QADC;AAAA,gBACSC,QADT,GACqBF,MADrB,CACSE,QADT;AAER,cAAIC,QAAQ,GAAG,MAAMd,QAAQ,CAACY,QAAD,EAAWC,QAAX,CAA7B;;AACA,cAAGC,QAAQ,CAACC,MAAT,KAAkB,CAArB,EAAuB;AACrB,qBAAQC,OAAR,CAAgB,OAAhB;;AACAf,YAAAA,WAAW,CAACgB,IAAZ,GAAmBH,QAAQ,CAACI,IAA5B;AACAhB,YAAAA,YAAY,CAACiB,QAAb,CAAsBL,QAAQ,CAACI,IAA/B;AACA,iBAAKX,KAAL,CAAWa,OAAX,CAAmBC,OAAnB,CAA2B,GAA3B;AACD,WALD,MAKK;AACH,qBAAQC,KAAR,CAAc,SAAd;AACD;AACF;AACF,OAbD;AAcD,KAjB2B;;AAAA,SAkB5BC,SAlB4B,GAkBhB,CAACC,IAAD,EAAOC,KAAP,EAAcC,QAAd,KAA2B;AACrC,UAAI,CAACD,KAAL,EAAY;AACVC,QAAAA,QAAQ,CAAC,QAAD,CAAR;AACD,OAFD,MAEO,IAAI,CAAC,kBAAkBC,IAAlB,CAAuBF,KAAvB,CAAL,EAAoC;AACzCC,QAAAA,QAAQ,CAAC,OAAD,CAAR;AACD,OAFM,MAEA,IAAID,KAAK,CAACG,MAAN,GAAe,CAAnB,EAAsB;AAC3BF,QAAAA,QAAQ,CAAC,YAAD,CAAR;AACD,OAFM,MAEA,IAAID,KAAK,CAACG,MAAN,GAAe,EAAnB,EAAuB;AAC5BF,QAAAA,QAAQ,CAAC,aAAD,CAAR;AACD,OAFM,MAEA;AACLA,QAAAA,QAAQ;AACT;AACF,KA9B2B;AAAA;;AAgC5BG,EAAAA,MAAM,GAAG;AACP,UAAMZ,IAAI,GAAGhB,WAAW,CAACgB,IAAzB;;AACA,QAAGA,IAAI,IAAIA,IAAI,CAACa,GAAhB,EAAqB;AACnB,aAAO,oBAAC,QAAD;AAAU,QAAA,EAAE,EAAC,GAAb;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,QAAP;AACD;;AACD,UAAMtB,IAAI,GAAG,KAAKD,KAAL,CAAWC,IAAxB;AALO,UAMAuB,iBANA,GAMqBvB,IANrB,CAMAuB,iBANA;AAOP,WACI;AAAK,MAAA,SAAS,EAAC,OAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OACE;AAAQ,MAAA,SAAS,EAAC,cAAlB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OACE;AAAK,MAAA,GAAG,EAAEhC,IAAV;AAAgB,MAAA,GAAG,EAAC,MAApB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MADF,EAEE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,iDAFF,CADF,EAKE;AAAS,MAAA,SAAS,EAAC,eAAnB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OACE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kCADF,EAEE;AAAM,MAAA,QAAQ,EAAE,KAAKK,YAArB;AAAmC,MAAA,SAAS,EAAC,YAA7C;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OACE,0BAAM,IAAN;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OAEI2B,iBAAiB,CAAC,UAAD,EAAa;AAC5BC,MAAAA,KAAK,EAAE,CACL;AACET,QAAAA,SAAS,EAAE,KAAKA;AADlB,OADK;AADqB,KAAb,CAAjB,CAMG;AAAO,MAAA,MAAM,EAAE;AAAM,QAAA,IAAI,EAAC,MAAX;AACM,QAAA,KAAK,EAAE;AAACU,UAAAA,KAAK,EAAE;AAAR,SADb;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,QAAf;AAEO,MAAA,WAAW,EAAC,oBAFnB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MANH,CAFJ,CADF,EAcE,0BAAM,IAAN;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OAEIF,iBAAiB,CAAC,UAAD,EAAa;AAC5BC,MAAAA,KAAK,EAAE,CACL;AACEE,QAAAA,QAAQ,EAAE,IADZ;AAEEC,QAAAA,OAAO,EAAE;AAFX,OADK;AADqB,KAAb,CAAjB,CAOG;AAAO,MAAA,MAAM,EAAE;AAAM,QAAA,IAAI,EAAC,MAAX;AACM,QAAA,KAAK,EAAE;AAACF,UAAAA,KAAK,EAAE;AAAR,SADb;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,QAAf;AAEO,MAAA,IAAI,EAAC,UAFZ;AAEuB,MAAA,WAAW,EAAC,cAFnC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MAPH,CAFJ,CAdF,EA6BE,0BAAM,IAAN;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OACE;AAAQ,MAAA,IAAI,EAAC,SAAb;AAAuB,MAAA,QAAQ,EAAC,QAAhC;AACQ,MAAA,SAAS,EAAC,mBADlB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,sBADF,CA7BF,CAFF,CALF,CADJ;AA+CD;;AAtF2B;;AAyF9B,MAAMG,SAAS,GAAG,MAAKC,MAAL,GAAclC,KAAd,CAAlB;;AACA,eAAeiC,SAAf","sourcesContent":["import React, {Component} from 'react';\nimport {Redirect} from 'react-router-dom';\nimport {\n  Form,\n  Icon,\n  Input,\n  Button, message,\n} from 'antd';\n\nimport logo from '../../assets/images/logo.png';\nimport './login.less';\nimport {reqLogin} from '../../api/index';\nimport memoryUtils from '../../utils/memoryUtils';\nimport storageUtils from '../../utils/storageUtils';\n\nclass Login extends Component {\n  handleSubmit = event => {\n    event.preventDefault();\n    this.props.form.validateFields(async (err, values) => {\n      if (!err) {\n        const {username, password} = values;\n        let response = await reqLogin(username, password);\n        if(response.status===0){\n          message.success('登录成功！');\n          memoryUtils.user = response.data;\n          storageUtils.saveUser(response.data);\n          this.props.history.replace('/');\n        }else{\n          message.error('账号或密码错误');\n        }\n      }\n    });\n  };\n  validator = (rule, value, callback) => {\n    if (!value) {\n      callback('请输入用户名');\n    } else if (!/^[a-zA-Z0-9_]+$/.test(value)) {\n      callback('非法用户名');\n    } else if (value.length < 4) {\n      callback('用户名长度不小于4位');\n    } else if (value.length > 10) {\n      callback('用户名长度不超过10位');\n    } else {\n      callback();\n    }\n  };\n\n  render() {\n    const user = memoryUtils.user;\n    if(user && user._id) {\n      return <Redirect to='/'/>\n    }\n    const form = this.props.form;\n    const {getFieldDecorator} = form;\n    return (\n        <div className=\"login\">\n          <header className=\"login-header\">\n            <img src={logo} alt=\"logo\"/>\n            <h1>XXX后台管理系统</h1>\n          </header>\n          <section className=\"login-content\">\n            <h2>用户登陆</h2>\n            <Form onSubmit={this.handleSubmit} className=\"login-form\">\n              <Form.Item>\n                {\n                  getFieldDecorator('username', {\n                    rules: [\n                      {\n                        validator: this.validator,\n                      },\n                    ],\n                  })(<Input prefix={<Icon type=\"user\"\n                                          style={{color: 'rgba(0,0,0,.25)'}}/>}\n                            placeholder=\"用户名\"/>)\n                }\n              </Form.Item>\n              <Form.Item>\n                {\n                  getFieldDecorator('password', {\n                    rules: [\n                      {\n                        required: true,\n                        message: '请输入密码',\n                      },\n                    ],\n                  })(<Input prefix={<Icon type=\"lock\"\n                                          style={{color: 'rgba(0,0,0,.25)'}}/>}\n                            type=\"password\" placeholder=\"密码\"\n                  />)\n                }\n              </Form.Item>\n              <Form.Item>\n                <Button type=\"primary\" htmlType=\"submit\"\n                        className=\"login-form-button\">\n                  登陆\n                </Button>\n              </Form.Item>\n            </Form>\n          </section>\n        </div>\n    );\n  }\n}\n\nconst WrapLogin = Form.create()(Login);\nexport default WrapLogin;"]},"metadata":{},"sourceType":"module"}